{"ast":null,"code":"/* Constants */\nvar DOWN_EVENT = 1;\nvar MOVE_EVENT = 2;\nvar UP_EVENT = 4;\nvar MOUSE_EVENTS = {\n  pointerdown: DOWN_EVENT,\n  pointermove: MOVE_EVENT,\n  pointerup: UP_EVENT,\n  mousedown: DOWN_EVENT,\n  mousemove: MOVE_EVENT,\n  mouseup: UP_EVENT\n}; // MouseEvent.which https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\nvar MOUSE_EVENT_WHICH_LEFT = 1;\nvar MOUSE_EVENT_WHICH_MIDDLE = 2;\nvar MOUSE_EVENT_WHICH_RIGHT = 3; // MouseEvent.button https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\nvar MOUSE_EVENT_BUTTON_LEFT = 0;\nvar MOUSE_EVENT_BUTTON_MIDDLE = 1;\nvar MOUSE_EVENT_BUTTON_RIGHT = 2; // MouseEvent.buttons https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\nvar MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nvar MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nvar MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\n/**\n * Extract the involved mouse button\n */\n\nexport function whichButtons(event) {\n  var eventType = MOUSE_EVENTS[event.srcEvent.type];\n\n  if (!eventType) {\n    // Not a mouse evet\n    return null;\n  }\n\n  var _event$srcEvent = event.srcEvent,\n      buttons = _event$srcEvent.buttons,\n      button = _event$srcEvent.button,\n      which = _event$srcEvent.which;\n  var leftButton = false;\n  var middleButton = false;\n  var rightButton = false;\n\n  if ( // button is up, need to find out which one was pressed before\n  eventType === UP_EVENT || // moving but does not support `buttons` API\n  eventType === MOVE_EVENT && !Number.isFinite(buttons)) {\n    leftButton = which === MOUSE_EVENT_WHICH_LEFT;\n    middleButton = which === MOUSE_EVENT_WHICH_MIDDLE;\n    rightButton = which === MOUSE_EVENT_WHICH_RIGHT;\n  } else if (eventType === MOVE_EVENT) {\n    leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n    middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n    rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n  } else if (eventType === DOWN_EVENT) {\n    leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n    middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n    rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n  }\n\n  return {\n    leftButton: leftButton,\n    middleButton: middleButton,\n    rightButton: rightButton\n  };\n}\n/**\n * Calculate event position relative to the root element\n */\n\nexport function getOffsetPosition(event, rootElement) {\n  var center = event.center; // `center` is a hammer.js event property\n\n  if (!center) {\n    // Not a gestural event\n    return null;\n  }\n\n  var rect = rootElement.getBoundingClientRect(); // Fix scale for map affected by a CSS transform.\n  // See https://stackoverflow.com/a/26893663/3528533\n\n  var scaleX = rect.width / rootElement.offsetWidth || 1;\n  var scaleY = rect.height / rootElement.offsetHeight || 1; // Calculate center relative to the root element\n\n  var offsetCenter = {\n    x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n    y: (center.y - rect.top - rootElement.clientTop) / scaleY\n  };\n  return {\n    center: center,\n    offsetCenter: offsetCenter\n  };\n}","map":{"version":3,"mappings":"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","names":["DOWN_EVENT","MOVE_EVENT","UP_EVENT","MOUSE_EVENTS","pointerdown","pointermove","pointerup","mousedown","mousemove","mouseup","MOUSE_EVENT_WHICH_LEFT","MOUSE_EVENT_WHICH_MIDDLE","MOUSE_EVENT_WHICH_RIGHT","MOUSE_EVENT_BUTTON_LEFT","MOUSE_EVENT_BUTTON_MIDDLE","MOUSE_EVENT_BUTTON_RIGHT","MOUSE_EVENT_BUTTONS_LEFT_MASK","MOUSE_EVENT_BUTTONS_RIGHT_MASK","MOUSE_EVENT_BUTTONS_MIDDLE_MASK","whichButtons","event","eventType","srcEvent","type","buttons","button","which","leftButton","middleButton","rightButton","Number","isFinite","Boolean","getOffsetPosition","rootElement","center","rect","getBoundingClientRect","scaleX","width","offsetWidth","scaleY","height","offsetHeight","offsetCenter","x","left","clientLeft","y","top","clientTop"],"sourceRoot":"","sources":["../../../src/utils/event-utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}